/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CANTOR_H_RPCGEN
#define _CANTOR_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct pair {
	int x;
	int y;
};
typedef struct pair pair;

typedef struct {
	u_int pairs_len;
	pair *pairs_val;
} pairs;

typedef struct {
	u_int results_len;
	int *results_val;
} results;

#define Cantor 0x1234
#define Cantor_Vers 1

#if defined(__STDC__) || defined(__cplusplus)
#define CantorForeward 1
extern  results * cantorforeward_1(pairs *, CLIENT *);
extern  results * cantorforeward_1_svc(pairs *, struct svc_req *);
#define CantorBackward 2
extern  pairs * cantorbackward_1(results *, CLIENT *);
extern  pairs * cantorbackward_1_svc(results *, struct svc_req *);
extern int cantor_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define CantorForeward 1
extern  results * cantorforeward_1();
extern  results * cantorforeward_1_svc();
#define CantorBackward 2
extern  pairs * cantorbackward_1();
extern  pairs * cantorbackward_1_svc();
extern int cantor_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_pair (XDR *, pair*);
extern  bool_t xdr_pairs (XDR *, pairs*);
extern  bool_t xdr_results (XDR *, results*);

#else /* K&R C */
extern bool_t xdr_pair ();
extern bool_t xdr_pairs ();
extern bool_t xdr_results ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_CANTOR_H_RPCGEN */
